@media only screen and (max-width: 600px) {
    .close-icon {
        color:white;
          position:relative;
          left: 95%;
          top:.25rem;
    }
  }
    

@media only screen and (min-width: 600px) {
    .close-icon {
       display: none;
    }
}

.optionsSVG{
  width: 100%; 
  height: auto;
}


/* defines the animation */
@keyframes fadeInUp {
  from { 
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

svg g path {
  // first we make all instances of this transparent. 
  opacity: 0;
 
  // as we're using the same animation for each instance, call it here so we're not repeating it
  animation: fadeInUp 1s ease-in-out 300ms forwards;

  // then define the animation delay in each class
  &#Candle1,
  &#Vector1 {
    animation-delay: 500ms;
  }
  &#Candle2,
  &#Vector2 {
    animation-delay: 1s;
  }
  &#Candle3,
  &#Vector3 {
    animation-delay: 2s;
  }
  &#Candle4,
  &#Vector4 {
    animation-delay: 3s;
  }
  &#Candle5,
  &#Vector5 {
    animation-delay: 3.5s;
  }
  &#Candle6,
  &#Vector6 {
    animation-delay: 4s;
  }
  &#Candle7,
  &#Vector7 {
      animation-delay: 5.25s;
    }
    &#Candle8,
    &#Vector8 {
      animation-delay: 6.25s;
    }
    &#Candle9,
    &#Vector9 {
      animation-delay: 7.25s;
    }
    &#Candle10,
    &#Vector10 {
      animation-delay: 8.5s;
    }
    &#Candle11,
    &#Vector11 {
      animation-delay: 9.75s;
    }
    &#Candle12,
    &#Vector12 {
      animation-delay: 10.75s;
    }
    &#Candle13,
    &#Vector13 {
      animation-delay: 12s;
    }
    &#Candle14,
    &#Vector14{
      animation-delay: 13s;
    }
    &#Candle15,
    &#Vector15 {
      animation-delay: 14.25s;
    }
    &#Candle16,&#Vector16 {
      animation-delay: 15.75s;
    }
    &#Candle17,
    &#Vector17 {
      animation-delay: 17s;
    }
    &#Candle18,
    &#Vector18 {
      animation-delay: 18s;
    }
    &#Candle19,
    &#Vector19 {
      animation-delay: 19s;
    }
    &#Candle20,
    &#Vector20{
      animation-delay: 20s;
    }
    &#Candle21,
    &#Vector21 {
      animation-delay: 21s;
    }
  }

